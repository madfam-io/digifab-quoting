// Add these models and updates to your schema.prisma

// Update Quote model - add shipping and totalPrice fields
model Quote {
  // ... existing fields ...
  shipping       Decimal   @default(0) @db.Decimal(10, 2)
  totalPrice     Decimal?  @db.Decimal(10, 2)
  // ... rest of model ...
}

// Update QuoteItem model - add process and material string fields
model QuoteItem {
  // ... existing fields ...
  partId         String?
  process        String
  material       String
  // ... rest of model ...
  
  // Add to relations
  part        File?        @relation("QuoteItemPart", fields: [partId], references: [id])
  orderItems  OrderItem[]
}

// Update PaymentIntent model
model PaymentIntent {
  id                    String    @id @default(cuid())
  tenantId              String
  quoteId               String
  orderId               String?
  provider              String    @default("stripe")
  amount                Decimal   @db.Decimal(10, 2)
  currency              String
  status                String
  externalRef           String?
  stripePaymentIntentId String?   @unique
  stripeSessionId       String?   @unique
  paidAt                DateTime?
  errorMessage          String?
  metadata              Json      @default("{}")
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt

  // Relations
  quote  Quote  @relation(fields: [quoteId], references: [id])
  order  Order? @relation(fields: [orderId], references: [id])

  @@index([tenantId])
  @@index([quoteId])
  @@index([orderId])
  @@index([externalRef])
  @@index([stripePaymentIntentId])
  @@index([stripeSessionId])
}

// Update Order model
model Order {
  id                  String    @id @default(cuid())
  tenantId            String
  orderNumber         String    @unique
  quoteId             String
  customerId          String
  status              String    @default("PENDING")
  paymentStatus       String    @default("PENDING")
  subtotal            Decimal   @db.Decimal(10, 2)
  tax                 Decimal   @db.Decimal(10, 2)
  shipping            Decimal   @default(0) @db.Decimal(10, 2)
  totalAmount         Decimal   @db.Decimal(10, 2)
  totalPaid           Decimal   @default(0) @db.Decimal(10, 2)
  currency            String
  productionStartedAt DateTime?
  completedAt         DateTime?
  shippedAt           DateTime?
  metadata            Json      @default("{}")
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt

  // Relations
  quote          Quote           @relation(fields: [quoteId], references: [id])
  customer       Customer        @relation(fields: [customerId], references: [id])
  orderItems     OrderItem[]
  invoices       Invoice[]
  paymentIntents PaymentIntent[]

  @@index([tenantId])
  @@index([quoteId])
  @@index([customerId])
  @@index([status])
}

// Add OrderItem model
model OrderItem {
  id            String   @id @default(cuid())
  orderId       String
  partId        String
  quoteItemId   String?
  tenantId      String
  quantity      Int
  process       String
  material      String
  finishOptions Json     @default("{}")
  unitPrice     Decimal  @db.Decimal(10, 2)
  subtotal      Decimal  @db.Decimal(10, 2)
  leadTimeDays  Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Relations
  order     Order      @relation(fields: [orderId], references: [id], onDelete: Cascade)
  part      File       @relation(fields: [partId], references: [id])
  quoteItem QuoteItem? @relation(fields: [quoteItemId], references: [id])

  @@index([orderId])
  @@index([tenantId])
}

// Update Invoice model
model Invoice {
  id            String    @id @default(cuid())
  tenantId      String
  invoiceNumber String    @unique
  orderId       String
  customerId    String
  status        String    @default("DRAFT")
  subtotal      Decimal   @db.Decimal(10, 2)
  tax           Decimal   @db.Decimal(10, 2)
  shipping      Decimal   @default(0) @db.Decimal(10, 2)
  totalAmount   Decimal   @db.Decimal(10, 2)
  currency      String
  dueDate       DateTime
  metadata      Json      @default("{}")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // Relations
  order      Order              @relation(fields: [orderId], references: [id])
  customer   Customer           @relation(fields: [customerId], references: [id])
  lineItems  InvoiceLineItem[]

  @@index([tenantId])
  @@index([orderId])
  @@index([customerId])
}

// Add InvoiceLineItem model
model InvoiceLineItem {
  id          String   @id @default(cuid())
  invoiceId   String
  tenantId    String
  description String
  quantity    Int
  unitPrice   Decimal  @db.Decimal(10, 2)
  amount      Decimal  @db.Decimal(10, 2)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  invoice Invoice @relation(fields: [invoiceId], references: [id], onDelete: Cascade)

  @@index([invoiceId])
  @@index([tenantId])
}

// Add Customer model (separate from User for better separation)
model Customer {
  id        String   @id @default(cuid())
  tenantId  String
  email     String
  name      String
  company   String?
  phone     String?
  address   Json     @default("{}")
  metadata  Json     @default("{}")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  tenant   Tenant    @relation(fields: [tenantId], references: [id])
  quotes   Quote[]
  orders   Order[]
  invoices Invoice[]

  @@unique([tenantId, email])
  @@index([tenantId])
  @@index([email])
}

// Update File model to add relation
model File {
  // ... existing fields ...
  
  // Add to relations
  quoteItemParts QuoteItem[] @relation("QuoteItemPart")
  orderItems     OrderItem[]
}