generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ==================== CORE MODELS ====================

model Tenant {
  id                  String   @id @default(cuid())
  name                String
  code                String   @unique
  domain              String?  @unique
  defaultCurrency     String   @default("MXN")
  supportedCurrencies String[] @default(["MXN", "USD"])
  defaultLocale       String   @default("es")
  supportedLocales    String[] @default(["es", "en"])
  features            Json     @default("{}")
  settings            Json     @default("{}")
  branding            Json     @default("{}")
  active              Boolean  @default(true)
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  // Relations
  users          User[]
  materials      Material[]
  machines       Machine[]
  processOptions ProcessOption[]
  quotes         Quote[]
  auditLogs      AuditLog[]
  ndaAcceptances NDAAcceptance[]
  discountRules  DiscountRule[]
  shippingRates  ShippingRate[]
  pricingRules   PricingRule[]

  @@index([code])
  @@index([domain])
}

model User {
  id            String    @id @default(cuid())
  tenantId      String
  email         String    @unique
  passwordHash  String?
  name          String?
  roles         String[]  @default(["customer"])
  active        Boolean   @default(true)
  emailVerified Boolean   @default(false)
  lastLogin     DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // Relations
  tenant         Tenant          @relation(fields: [tenantId], references: [id])
  quotes         Quote[]
  auditLogs      AuditLog[]
  ndaAcceptances NDAAcceptance[]
  sessions       Session[]

  @@index([tenantId])
  @@index([email])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  token        String   @unique
  refreshToken String   @unique
  expiresAt    DateTime
  createdAt    DateTime @default(now())

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([token])
}

// ==================== QUOTING MODELS ====================

model Quote {
  id             String   @id @default(cuid())
  tenantId       String
  customerId     String?
  status         String   @default("draft")
  currency       String   @default("MXN")
  objective      Json     @default("{\"cost\": 0.5, \"lead\": 0.3, \"green\": 0.2}")
  validityUntil  DateTime
  totals         Json?
  sustainability Json?
  metadata       Json     @default("{}")
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Relations
  tenant         Tenant          @relation(fields: [tenantId], references: [id])
  customer       User?           @relation(fields: [customerId], references: [id])
  items          QuoteItem[]
  paymentIntents PaymentIntent[]
  auditLogs      AuditLog[]

  @@index([tenantId])
  @@index([customerId])
  @@index([status])
  @@index([createdAt])
}

model QuoteItem {
  id             String   @id @default(cuid())
  quoteId        String
  name           String
  process        String
  quantity       Int
  unitPrice      Decimal? @db.Decimal(10, 2)
  totalPrice     Decimal? @db.Decimal(10, 2)
  leadDays       Int?
  selections     Json
  costBreakdown  Json?
  sustainability Json?
  flags          String[] @default([])
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Relations
  quote        Quote         @relation(fields: [quoteId], references: [id], onDelete: Cascade)
  files        File[]
  dfmReport    DFMReport?
  supplierBids SupplierBid[]

  @@index([quoteId])
  @@index([process])
}

model File {
  id              String   @id @default(cuid())
  tenantId        String
  quoteItemId     String?
  filename        String
  originalName    String
  type            String
  size            Int
  path            String
  hash            String
  version         Int      @default(1)
  ndaAcceptanceId String?
  metadata        Json     @default("{}")
  createdAt       DateTime @default(now())

  // Relations
  quoteItem     QuoteItem?     @relation(fields: [quoteItemId], references: [id])
  ndaAcceptance NDAAcceptance? @relation(fields: [ndaAcceptanceId], references: [id])

  @@index([tenantId])
  @@index([quoteItemId])
  @@index([hash])
}

model DFMReport {
  id          String   @id @default(cuid())
  quoteItemId String   @unique
  metrics     Json
  issues      Json     @default("[]")
  riskScore   Int
  createdAt   DateTime @default(now())

  // Relations
  quoteItem QuoteItem @relation(fields: [quoteItemId], references: [id], onDelete: Cascade)
}

// ==================== PRICING & CATALOG MODELS ====================

model Material {
  id                   String    @id @default(cuid())
  tenantId             String
  process              String
  name                 String
  code                 String
  density              Decimal   @db.Decimal(6, 3)
  co2eFactor           Decimal   @db.Decimal(6, 3)
  costUom              String    @default("kg")
  pricePerUom          Decimal   @db.Decimal(10, 2)
  recycledPercent      Decimal?  @db.Decimal(5, 2)
  properties           Json      @default("{}")
  active               Boolean   @default(true)
  versionEffectiveFrom DateTime  @default(now())
  versionEffectiveTo   DateTime?
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt

  // Relations
  tenant Tenant @relation(fields: [tenantId], references: [id])

  @@unique([tenantId, code, versionEffectiveFrom])
  @@index([tenantId])
  @@index([process])
  @@index([active])
}

model Machine {
  id           String   @id @default(cuid())
  tenantId     String
  process      String
  model        String
  name         String
  powerW       Int
  hourlyRate   Decimal  @db.Decimal(10, 2)
  setupMinutes Int
  specs        Json
  active       Boolean  @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Relations
  tenant Tenant @relation(fields: [tenantId], references: [id])

  @@index([tenantId])
  @@index([process])
  @@index([active])
}

model ProcessOption {
  id                 String   @id @default(cuid())
  tenantId           String
  process            String
  optionsSchema      Json
  marginFloorPercent Decimal  @db.Decimal(5, 2)
  active             Boolean  @default(true)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  // Relations
  tenant Tenant @relation(fields: [tenantId], references: [id])

  @@unique([tenantId, process])
  @@index([process])
}

model PricingRule {
  id         String   @id @default(cuid())
  tenantId   String
  name       String
  process    String
  formula    String
  parameters Json
  conditions Json     @default("[]")
  priority   Int      @default(0)
  active     Boolean  @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Relations
  tenant Tenant @relation(fields: [tenantId], references: [id])

  @@index([tenantId])
  @@index([process])
  @@index([active])
  @@index([priority])
}

model DiscountRule {
  id         String   @id @default(cuid())
  tenantId   String
  name       String
  scope      String // quote, item, customer
  formula    String
  thresholds Json
  active     Boolean  @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Relations
  tenant Tenant @relation(fields: [tenantId], references: [id])

  @@index([tenantId])
  @@index([scope])
  @@index([active])
}

model ShippingRate {
  id           String   @id @default(cuid())
  tenantId     String
  carrier      String
  serviceCode  String
  serviceName  String
  leadDays     Int
  priceFormula String
  zones        Json     @default("[]")
  active       Boolean  @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Relations
  tenant Tenant @relation(fields: [tenantId], references: [id])

  @@index([tenantId])
  @@index([carrier])
  @@index([active])
}

// ==================== SUPPLIER MODELS (P1) ====================

model SupplierBid {
  id          String   @id @default(cuid())
  tenantId    String
  quoteItemId String
  supplierId  String
  price       Decimal  @db.Decimal(10, 2)
  leadDays    Int
  co2e        Decimal  @db.Decimal(6, 3)
  selected    Boolean  @default(false)
  createdAt   DateTime @default(now())

  // Relations
  quoteItem QuoteItem @relation(fields: [quoteItemId], references: [id])

  @@index([quoteItemId])
  @@index([supplierId])
}

// ==================== PAYMENT MODELS ====================

model PaymentIntent {
  id          String   @id @default(cuid())
  tenantId    String
  quoteId     String
  provider    String   @default("stripe")
  amount      Decimal  @db.Decimal(10, 2)
  currency    String
  status      String
  externalRef String?
  metadata    Json     @default("{}")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  quote Quote @relation(fields: [quoteId], references: [id])

  @@index([tenantId])
  @@index([quoteId])
  @@index([externalRef])
}

// ==================== COMPLIANCE & AUDIT MODELS ====================

model AuditLog {
  id       String   @id @default(cuid())
  tenantId String
  actorId  String?
  entity   String
  entityId String
  action   String
  before   Json?
  after    Json?
  metadata Json     @default("{}")
  at       DateTime @default(now())

  // Relations
  tenant  Tenant  @relation(fields: [tenantId], references: [id])
  actor   User?   @relation(fields: [actorId], references: [id])
  Quote   Quote?  @relation(fields: [quoteId], references: [id])
  quoteId String?

  @@index([tenantId])
  @@index([entity, entityId])
  @@index([actorId])
  @@index([at])
}

model NDAAcceptance {
  id        String   @id @default(cuid())
  tenantId  String
  userId    String?
  email     String
  ip        String
  userAgent String
  version   String
  at        DateTime @default(now())

  // Relations
  tenant Tenant @relation(fields: [tenantId], references: [id])
  user   User?  @relation(fields: [userId], references: [id])
  files  File[]

  @@index([tenantId])
  @@index([email])
  @@index([at])
}

// ==================== SYSTEM MODELS ====================

model FXRate {
  id       String   @id @default(cuid())
  base     String
  quote    String
  rate     Decimal  @db.Decimal(10, 6)
  asOf     DateTime
  source   String   @default("openexchangerates")
  tenantId String?

  @@unique([base, quote, asOf])
  @@index([asOf])
}
